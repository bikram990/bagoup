// Code generated by MockGen. DO NOT EDIT.
// Source: db.go

// Package mock_chatdb is a generated GoMock package.
package mock_chatdb

import (
	gomock "github.com/golang/mock/gomock"
	chatdb "github.com/tagatac/bagoup/chatdb"
	reflect "reflect"
)

// MockChatDB is a mock of ChatDB interface
type MockChatDB struct {
	ctrl     *gomock.Controller
	recorder *MockChatDBMockRecorder
}

// MockChatDBMockRecorder is the mock recorder for MockChatDB
type MockChatDBMockRecorder struct {
	mock *MockChatDB
}

// NewMockChatDB creates a new mock instance
func NewMockChatDB(ctrl *gomock.Controller) *MockChatDB {
	mock := &MockChatDB{ctrl: ctrl}
	mock.recorder = &MockChatDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChatDB) EXPECT() *MockChatDBMockRecorder {
	return m.recorder
}

// GetChats mocks base method
func (m *MockChatDB) GetChats() ([]chatdb.Chat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChats")
	ret0, _ := ret[0].([]chatdb.Chat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChats indicates an expected call of GetChats
func (mr *MockChatDBMockRecorder) GetChats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChats", reflect.TypeOf((*MockChatDB)(nil).GetChats))
}

// GetMessageIDs mocks base method
func (m *MockChatDB) GetMessageIDs(chatID int) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageIDs", chatID)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageIDs indicates an expected call of GetMessageIDs
func (mr *MockChatDBMockRecorder) GetMessageIDs(chatID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageIDs", reflect.TypeOf((*MockChatDB)(nil).GetMessageIDs), chatID)
}

// GetMessage mocks base method
func (m *MockChatDB) GetMessage(messageID int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessage", messageID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessage indicates an expected call of GetMessage
func (mr *MockChatDBMockRecorder) GetMessage(messageID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessage", reflect.TypeOf((*MockChatDB)(nil).GetMessage), messageID)
}
